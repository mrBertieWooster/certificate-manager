"""Initial migration

Revision ID: 905617332b5a
Revises: 
Create Date: 2025-01-30 19:08:25.403549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '905617332b5a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issuer', sa.String(), nullable=True),
    sa.Column('this_update', sa.DateTime(), nullable=True),
    sa.Column('next_update', sa.DateTime(), nullable=True),
    sa.Column('crl_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crls_id'), 'crls', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('certificate_chains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_certificate_chains_id'), 'certificate_chains', ['id'], unique=False)
    op.create_index(op.f('ix_certificate_chains_name'), 'certificate_chains', ['name'], unique=False)
    op.create_table('certificates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('common_name', sa.String(), nullable=True),
    sa.Column('serial_number', sa.String(), nullable=True),
    sa.Column('issuer', sa.String(), nullable=True),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('revoked', sa.Boolean(), nullable=True),
    sa.Column('revocation_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('certificate_type', sa.Enum('ROOT', 'INTERMEDIATE', 'USER', name='certificatetype'), nullable=True),
    sa.Column('algorithm', sa.Enum('GOST', 'RSA', name='algorithmtype'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_certificates_common_name'), 'certificates', ['common_name'], unique=False)
    op.create_index(op.f('ix_certificates_id'), 'certificates', ['id'], unique=False)
    op.create_index(op.f('ix_certificates_serial_number'), 'certificates', ['serial_number'], unique=True)
    op.create_table('delta_crls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issuer', sa.String(), nullable=True),
    sa.Column('this_update', sa.DateTime(), nullable=True),
    sa.Column('next_update', sa.DateTime(), nullable=True),
    sa.Column('crl_number', sa.Integer(), nullable=True),
    sa.Column('base_crl_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['base_crl_id'], ['crls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_delta_crls_id'), 'delta_crls', ['id'], unique=False)
    op.create_table('certificate_chain_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('certificate_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['certificate_id'], ['certificates.id'], ),
    sa.ForeignKeyConstraint(['chain_id'], ['certificate_chains.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_certificate_chain_links_id'), 'certificate_chain_links', ['id'], unique=False)
    op.create_table('revoked_certificates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('certificate_id', sa.Integer(), nullable=True),
    sa.Column('revocation_date', sa.DateTime(), nullable=True),
    sa.Column('crl_id', sa.Integer(), nullable=True),
    sa.Column('delta_crl_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['certificate_id'], ['certificates.id'], ),
    sa.ForeignKeyConstraint(['crl_id'], ['crls.id'], ),
    sa.ForeignKeyConstraint(['delta_crl_id'], ['delta_crls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_revoked_certificates_id'), 'revoked_certificates', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_revoked_certificates_id'), table_name='revoked_certificates')
    op.drop_table('revoked_certificates')
    op.drop_index(op.f('ix_certificate_chain_links_id'), table_name='certificate_chain_links')
    op.drop_table('certificate_chain_links')
    op.drop_index(op.f('ix_delta_crls_id'), table_name='delta_crls')
    op.drop_table('delta_crls')
    op.drop_index(op.f('ix_certificates_serial_number'), table_name='certificates')
    op.drop_index(op.f('ix_certificates_id'), table_name='certificates')
    op.drop_index(op.f('ix_certificates_common_name'), table_name='certificates')
    op.drop_table('certificates')
    op.drop_index(op.f('ix_certificate_chains_name'), table_name='certificate_chains')
    op.drop_index(op.f('ix_certificate_chains_id'), table_name='certificate_chains')
    op.drop_table('certificate_chains')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_crls_id'), table_name='crls')
    op.drop_table('crls')
    # ### end Alembic commands ###
